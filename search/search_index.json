{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u7b80\u4ecb \u00b6 \u6bcf\u4e00\u9897\u51ac\u5929\u7684\u79cd\u5b50\uff0c\u90fd\u6709\u4e00\u4e2a\u5173\u4e8e\u6625\u5929\u7684\u68a6\u60f3\u3002 OI \u662f\u4e00\u4e2a\u5947\u5999\u7684\u4e16\u754c\uff0c\u68a6\u60f3\u5728\u8fd9\u91cc\u751f\u6839\u53d1\u82bd\uff0c\u50cf\u4e00\u9897\u9897\u84b2\u516c\u82f1\uff0c\u5728\u6625\u98ce\u7684\u5439\u62c2\u4e0b\uff0c\u62e5\u62b1\u7740\u84dd\u5929\uff0c\u53bb\u5230\u5f88\u8fdc\u5f88\u8fdc\u7684\u5730\u65b9\u3002\u8fd9\u91cc\u603b\u662f\u5145\u6ee1\u7740\u4e0d\u671f\u800c\u81f3\u7684\u6e29\u6696\u548c\u751f\u751f\u4e0d\u606f\u7684\u5e0c\u671b\u3002 \u94fe\u63a5 \u00b6 Online Judge: \u6d1b\u8c37 \uff0c Codeforces \uff0c LibreOJ \u3002 \u8d44\u6e90\u7f51\u7ad9\uff1a OI Wiki \uff0c MY OI \u3002 \u4e2a\u4eba\u8d44\u6e90\uff1a \u535a\u5ba2\u4ed3\u5e93 \uff0c \u4ee3\u7801\u4ed3\u5e93 \u7ec3\u4e60\u6570\u636e \u00b6 OI \u751f\u6daf\u5927\u4e8b\u8bb0 \u00b6 \u505a\u9898 \u00b6 \u6d1b\u8c37\u4e24\u767e\u9898\u796d\uff1a P1120 \u5c0f\u6728\u68cd \uff3b\u6570\u636e\u52a0\u5f3a\u7248\uff3d 2021/7/23 \u6d1b\u8c37\u4e09\u767e\u9898\u796d\uff1a CF1619F Let's Play the Hat? 2021/12/22 \u7ade\u8d5b \u00b6 CSP-J 2020 \u4e00\u5e06\u98ce\u987a \u4e00\u7b49 240 \u5206 CSP-S 2021 \u53d1\u6325\u5931\u5e38 \u4e8c\u7b49 \u4e0d\u5230 100 \u5206 NOIP 2021 \u72af\u4e86\u201c\u5c0f\u201d\u9519\u8bef puts(\"-1\\n\"); \u6bc1\u6211\u9752\u6625 \u65ad\u6211\u524d\u9014 \u9057\u6068\u7ec8\u751f","title":"\u7b80\u4ecb"},{"location":"#_1","text":"\u6bcf\u4e00\u9897\u51ac\u5929\u7684\u79cd\u5b50\uff0c\u90fd\u6709\u4e00\u4e2a\u5173\u4e8e\u6625\u5929\u7684\u68a6\u60f3\u3002 OI \u662f\u4e00\u4e2a\u5947\u5999\u7684\u4e16\u754c\uff0c\u68a6\u60f3\u5728\u8fd9\u91cc\u751f\u6839\u53d1\u82bd\uff0c\u50cf\u4e00\u9897\u9897\u84b2\u516c\u82f1\uff0c\u5728\u6625\u98ce\u7684\u5439\u62c2\u4e0b\uff0c\u62e5\u62b1\u7740\u84dd\u5929\uff0c\u53bb\u5230\u5f88\u8fdc\u5f88\u8fdc\u7684\u5730\u65b9\u3002\u8fd9\u91cc\u603b\u662f\u5145\u6ee1\u7740\u4e0d\u671f\u800c\u81f3\u7684\u6e29\u6696\u548c\u751f\u751f\u4e0d\u606f\u7684\u5e0c\u671b\u3002","title":"\u7b80\u4ecb"},{"location":"#_2","text":"Online Judge: \u6d1b\u8c37 \uff0c Codeforces \uff0c LibreOJ \u3002 \u8d44\u6e90\u7f51\u7ad9\uff1a OI Wiki \uff0c MY OI \u3002 \u4e2a\u4eba\u8d44\u6e90\uff1a \u535a\u5ba2\u4ed3\u5e93 \uff0c \u4ee3\u7801\u4ed3\u5e93","title":"\u94fe\u63a5"},{"location":"#_3","text":"","title":"\u7ec3\u4e60\u6570\u636e"},{"location":"#oi","text":"","title":"OI \u751f\u6daf\u5927\u4e8b\u8bb0"},{"location":"#_4","text":"\u6d1b\u8c37\u4e24\u767e\u9898\u796d\uff1a P1120 \u5c0f\u6728\u68cd \uff3b\u6570\u636e\u52a0\u5f3a\u7248\uff3d 2021/7/23 \u6d1b\u8c37\u4e09\u767e\u9898\u796d\uff1a CF1619F Let's Play the Hat? 2021/12/22","title":"\u505a\u9898"},{"location":"#_5","text":"CSP-J 2020 \u4e00\u5e06\u98ce\u987a \u4e00\u7b49 240 \u5206 CSP-S 2021 \u53d1\u6325\u5931\u5e38 \u4e8c\u7b49 \u4e0d\u5230 100 \u5206 NOIP 2021 \u72af\u4e86\u201c\u5c0f\u201d\u9519\u8bef puts(\"-1\\n\"); \u6bc1\u6211\u9752\u6625 \u65ad\u6211\u524d\u9014 \u9057\u6068\u7ec8\u751f","title":"\u7ade\u8d5b"},{"location":"%E7%AC%94%E8%AE%B0/","text":"\u7b14\u8bb0\u5927\u7eb2 \u00b6 \u6ce8\u610f\u4e8b\u9879 \u00b6 \u8bed\u8a00 \u00b6 \u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\uff1a\u56db\u5219\u8fd0\u7b97 \\(>\\) \u5173\u7cfb\u8fd0\u7b97 \\(>\\) \u4f4d\u8fd0\u7b97 \\(>\\) \u903b\u8f91\u8fd0\u7b97\u3002 \u8f93\u51fa\uff1a\u5c3d\u91cf\u5c11\u6df7\u7528\uff1b puts \u4f1a\u81ea\u52a8\u6362\u884c\u3002 \u6570\u7ec4\uff1a\u5c3d\u91cf\u5f00\u6700\u5927\u4f7f\u7528 \\(+ 7\\) \u3002 \u5c40\u90e8\u53d8\u91cf\u8981\u521d\u59cb\u5316\u3002 memset \u5c3d\u91cf\u53ea\u521d\u59cb\u5316 \\(0\\) \u548c \\(-1\\) \u3002 STL\uff1a\u65e0\u5173\u7d27\u8981\u7684\u5c11\u7528\uff08\u5982\u5b58\u56fe\uff0c stack \uff09\u3002 \u7b97\u6cd5 \u00b6 Tarjan\uff1a\u5f3a\u8fde\u901a\u5206\u91cf \\(=\\) \u53cc\u8fde\u901a\u5206\u91cf\u3002\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u56fe\u3002\u53c2\u6570\u6709 cur \uff0c fa ,\u53d8\u91cf\u57fa\u672c\u7684\u6709 dfn \uff0c low \uff0c cnt \uff0c\u6709\u65f6\u8981\u52a0 s \uff0c scnt \uff0c belong \uff0c bcnt \u3002\u6ce8\u610f\u5199 if(dfn[v] < dfn[u] && v != fa) \u3002 \u6700\u77ed\u8def\uff1aSPFA \u7528 queue \uff0c\u52a0 vis \uff0cDijkstra \u7528 priority_queue \uff0c\u4e0d\u52a0 vis \u3002 \u500d\u589e\u6c42 LCA\uff1a\u6570\u7ec4 log \u4e00\u7ef4\u8981\u5f00 \\(\\log(n)+1\\) \u3002 \u6570\u636e\u7ed3\u6784 \u00b6 ST \u8868\uff1a\u6570\u7ec4 log \u4e00\u7ef4\u8981\u5f00 \\(\\log(n)+1\\) \u3002 \u4ee3\u7801\u6a21\u677f \u00b6 \u8be6\u89c1 \u4ee3\u7801\u6a21\u677f","title":"\u7b14\u8bb0\u5927\u7eb2"},{"location":"%E7%AC%94%E8%AE%B0/#_1","text":"","title":"\u7b14\u8bb0\u5927\u7eb2"},{"location":"%E7%AC%94%E8%AE%B0/#_2","text":"","title":"\u6ce8\u610f\u4e8b\u9879"},{"location":"%E7%AC%94%E8%AE%B0/#_3","text":"\u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\uff1a\u56db\u5219\u8fd0\u7b97 \\(>\\) \u5173\u7cfb\u8fd0\u7b97 \\(>\\) \u4f4d\u8fd0\u7b97 \\(>\\) \u903b\u8f91\u8fd0\u7b97\u3002 \u8f93\u51fa\uff1a\u5c3d\u91cf\u5c11\u6df7\u7528\uff1b puts \u4f1a\u81ea\u52a8\u6362\u884c\u3002 \u6570\u7ec4\uff1a\u5c3d\u91cf\u5f00\u6700\u5927\u4f7f\u7528 \\(+ 7\\) \u3002 \u5c40\u90e8\u53d8\u91cf\u8981\u521d\u59cb\u5316\u3002 memset \u5c3d\u91cf\u53ea\u521d\u59cb\u5316 \\(0\\) \u548c \\(-1\\) \u3002 STL\uff1a\u65e0\u5173\u7d27\u8981\u7684\u5c11\u7528\uff08\u5982\u5b58\u56fe\uff0c stack \uff09\u3002","title":"\u8bed\u8a00"},{"location":"%E7%AC%94%E8%AE%B0/#_4","text":"Tarjan\uff1a\u5f3a\u8fde\u901a\u5206\u91cf \\(=\\) \u53cc\u8fde\u901a\u5206\u91cf\u3002\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u56fe\u3002\u53c2\u6570\u6709 cur \uff0c fa ,\u53d8\u91cf\u57fa\u672c\u7684\u6709 dfn \uff0c low \uff0c cnt \uff0c\u6709\u65f6\u8981\u52a0 s \uff0c scnt \uff0c belong \uff0c bcnt \u3002\u6ce8\u610f\u5199 if(dfn[v] < dfn[u] && v != fa) \u3002 \u6700\u77ed\u8def\uff1aSPFA \u7528 queue \uff0c\u52a0 vis \uff0cDijkstra \u7528 priority_queue \uff0c\u4e0d\u52a0 vis \u3002 \u500d\u589e\u6c42 LCA\uff1a\u6570\u7ec4 log \u4e00\u7ef4\u8981\u5f00 \\(\\log(n)+1\\) \u3002","title":"\u7b97\u6cd5"},{"location":"%E7%AC%94%E8%AE%B0/#_5","text":"ST \u8868\uff1a\u6570\u7ec4 log \u4e00\u7ef4\u8981\u5f00 \\(\\log(n)+1\\) \u3002","title":"\u6570\u636e\u7ed3\u6784"},{"location":"%E7%AC%94%E8%AE%B0/#_6","text":"\u8be6\u89c1 \u4ee3\u7801\u6a21\u677f","title":"\u4ee3\u7801\u6a21\u677f"},{"location":"%E7%AC%94%E8%AE%B0/snippets/","text":"\u4ee3\u7801\u6a21\u677f \u00b6 \u6570\u636e\u7ed3\u6784 \u00b6 ST \u8868 \u00b6 \u5b9a\u4e49\uff1a int s [ MAXN ][ MAXLOG ]; \u9884\u5904\u7406\uff08\u6b64\u5904 max \u51fd\u6570\u53ef\u4ee5\u662f\u4efb\u4f55\u6ee1\u8db3\u53ef\u91cd\u590d\u8d21\u732e\u6027\u7684\u51fd\u6570\uff0c\u5982 min \uff0c gcd \uff09\uff1a slim = ( int )( log (( double ) n ) / log ( 2.0 )); for ( int i = 1 ; i <= n ; i ++ ) s [ i ][ 0 ] = a [ i ]; for ( int j = 1 ; j <= slim ; j ++ ) for ( int i = 1 ; i <= n ; i ++ ) if ( i + ( 1 << ( j -1 )) <= n ) s [ i ][ j ] = max ( s [ i ][ j -1 ], s [ i + ( 1 << ( j -1 ))][ j -1 ]); \u67e5\u8be2\uff08\u6709\u5173 max \u51fd\u6570\u540c\u4e0a\uff09\uff1a int query ( int l , int r ) { int qlim = ( int )( log (( double )( r - l + 1 )) / log ( 2.0 )); return max ( s [ l ][ qlim ], s [ r - ( 1 << qlim ) + 1 ][ qlim ]); }","title":"\u4ee3\u7801\u6a21\u677f"},{"location":"%E7%AC%94%E8%AE%B0/snippets/#_1","text":"","title":"\u4ee3\u7801\u6a21\u677f"},{"location":"%E7%AC%94%E8%AE%B0/snippets/#_2","text":"","title":"\u6570\u636e\u7ed3\u6784"},{"location":"%E7%AC%94%E8%AE%B0/snippets/#st","text":"\u5b9a\u4e49\uff1a int s [ MAXN ][ MAXLOG ]; \u9884\u5904\u7406\uff08\u6b64\u5904 max \u51fd\u6570\u53ef\u4ee5\u662f\u4efb\u4f55\u6ee1\u8db3\u53ef\u91cd\u590d\u8d21\u732e\u6027\u7684\u51fd\u6570\uff0c\u5982 min \uff0c gcd \uff09\uff1a slim = ( int )( log (( double ) n ) / log ( 2.0 )); for ( int i = 1 ; i <= n ; i ++ ) s [ i ][ 0 ] = a [ i ]; for ( int j = 1 ; j <= slim ; j ++ ) for ( int i = 1 ; i <= n ; i ++ ) if ( i + ( 1 << ( j -1 )) <= n ) s [ i ][ j ] = max ( s [ i ][ j -1 ], s [ i + ( 1 << ( j -1 ))][ j -1 ]); \u67e5\u8be2\uff08\u6709\u5173 max \u51fd\u6570\u540c\u4e0a\uff09\uff1a int query ( int l , int r ) { int qlim = ( int )( log (( double )( r - l + 1 )) / log ( 2.0 )); return max ( s [ l ][ qlim ], s [ r - ( 1 << qlim ) + 1 ][ qlim ]); }","title":"ST \u8868"},{"location":"%E9%A2%98%E8%A7%A3/","text":"\u9898\u89e3\u5927\u7eb2 \u00b6","title":"\u9898\u89e3\u5927\u7eb2"},{"location":"%E9%A2%98%E8%A7%A3/#_1","text":"","title":"\u9898\u89e3\u5927\u7eb2"}]}